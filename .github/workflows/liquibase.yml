name: Liquibase Database Update

on:
  workflow_dispatch:
    branches: [ main ]
    inputs:
      terraform_working_dir:
        type: choice
        description: 'Terraform environment'
        options:
        - dev
        - test
        - prod

env:
  TERRAFORM_VERSION: "1.7.2"
  TERRAFORM_DIR: "./terraform/live/${{ github.event.inputs.terraform_working_dir }}"
  LIQUIBASE_WORKING_DIR: "./db"

jobs:
  execute-liquibase-update:
    name: 'Perform DB Updates Via Liquibase'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4.1.1

    - name: Configure AWS Plan Credentials
      uses: aws-actions/configure-aws-credentials@v4.0.2
      with:
        role-to-assume: ${{ secrets.AWS_READ_TF_STATE_ARN }}
        aws-region: ${{ secrets.AWS_REGION }}
        role-session-name: Github-OICD-Terraform-Plan

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3.0.0
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - name: Terraform Init
      run: terraform init -backend-config="bucket=${{ secrets.AWS_BUCKET_NAME }}" -backend-config="dynamodb_table=${{ secrets.AWS_DYNAMODB_TABLE }}"
      working-directory: ${{ env.TERRAFORM_DIR }}

    - name: Get DB Info
      run: |
        DB_ADDRESS=$(terraform output -json gophbank_db_address | jq -r .)
        echo "::add-mask::$DB_ADDRESS"
        echo "DB_ADDRESS=$DB_ADDRESS" >> $GITHUB_ENV
        DB_DEFAULT_DATABASE=$(terraform output -json gophbank_created_db | jq -r .)
        echo "::add-mask::$DB_DEFAULT_DATABASE"
        echo "DB_DEFAULT_DATABASE=$DB_DEFAULT_DATABASE" >> $GITHUB_ENV
        DB_USERNAME=$(terraform output -json gophbank_db_username | jq -r .)
        echo "::add-mask::$DB_USERNAME"
        echo "DB_USERNAME=$DB_USERNAME" >> $GITHUB_ENV
        DB_PASSWORD=$(terraform output -json gophbank_db_password | jq -r .)
        echo "::add-mask::$DB_PASSWORD"
        echo "DB_PASSWORD=$DB_PASSWORD" >> $GITHUB_ENV
      working-directory: ${{ env.TERRAFORM_DIR }}

    - name: Set up JDK 11
      uses: actions/setup-java@v4.2.1
      with:
        java-version: '11'
        distribution: 'adopt'


    - name: Install Liquibase
      run: sudo snap install liquibase

    - name: Download PostgreSQL JDBC Driver
      run: |
        mkdir jdbc
        curl -L https://jdbc.postgresql.org/download/postgresql-42.2.23.jar -o jdbc/postgresql.jar
      working-directory: ${{ env.LIQUIBASE_WORKING_DIR }}

    - name: Install AWS East-US-1 RDS SSL Cert
      run: |
        mkdir ssl
        curl -L https://truststore.pki.rds.amazonaws.com/us-east-1/us-east-1-bundle.pem -o ssl/us-east-1-bundle.pem
        echo "SSL_CERT=ssl/us-east-1-bundle.pem" >> $GITHUB_ENV
      working-directory: ${{ env.LIQUIBASE_WORKING_DIR }}

    - name: Run Liquibase Update
      run: |
        liquibase --classpath=./jdbc/postgresql.jar --url="jdbc:postgresql://${{ env.DB_ADDRESS }}:5432/${{ env.DB_DEFAULT_DATABASE }}?sslmode=verify-full&sslrootcert=${{ env.SSL_CERT }}" --changeLogFile=./changelog.yml --username=${{ env.DB_USERNAME }} --password='${{ env.DB_PASSWORD }}' update
      working-directory: ${{ env.LIQUIBASE_WORKING_DIR }}