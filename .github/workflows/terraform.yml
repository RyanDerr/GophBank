name: 'Terraform'

on:
  push:
    branches: [ main ]
    paths:
    - 'terraform/**'
  workflow_dispatch:
    inputs:
      destroy:
        description: 'Create a destroy plan?'
        type: choice
        options:
        - 'true'
        - 'false'
        default: 'false'
      terraform_working_dir:
        type: choice
        description: 'Terraform environment'
        options:
        - dev
        - test
        - prod
        default: 'dev'

env:
  TERRAFORM_VERSION: "1.7.2"
  TERRAFORM_DIR: "./terraform/live/${{ github.event.inputs.terraform_working_dir }}"

jobs:
  terraform_plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    environment:
      name: 'AWS'
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4.0.0

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3.0.0
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - name: Terraform Init
      run: terraform init
      working-directory: ${{ env.TERRAFORM_DIR }}

    - name: Terraform Plan
      run: |
        if [ "${{ github.event.inputs.destroy }}" = "true" ]; then
          terraform plan -destroy -out=tf-plan.out
        else
          terraform plan -out=tf-plan.out
        fi
      working-directory: ${{ env.TERRAFORM_DIR }}

    - name: Upload plan
      uses: actions/upload-artifact@v4.3.1
      with:
        name: tf-plan.out
        path: ${{ env.TERRAFORM_DIR }}/tf-plan.out

  terraform_apply:
    name: 'Terraform Apply Plan'
    needs: terraform_plan
    runs-on: ubuntu-latest
    environment:
      name: 'AWS'
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4.0.0

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3.0.0
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}


    - name: Download plan
      uses: actions/download-artifact@v4.1.4
      with:
        name: tf-plan.out
        path: ${{ env.TERRAFORM_DIR }}

    - name: Terraform Init
      run: terraform init
      working-directory: ${{ env.TERRAFORM_DIR }}

    - name: Terraform Apply
      run: terraform apply -auto-approve tf-plan.out
      working-directory: ${{ env.TERRAFORM_DIR }}
